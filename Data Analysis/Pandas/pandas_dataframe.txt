2 dimensional table
info() return a summary

sum() add by tranversing the index; axis = 1/'index'/'column' to across columns

selecting multiple columns

.insert(loc:numeric index position)
.value_counts(normalize = )

drop rows with missing values
.dropna(how = 'any') default
.dropna(how = 'all')
.dropna(subset = [''])

fill missing values
.fillna()

.astype('int'/int) same
astype('category') rather than object reduce memory usage
.nunique()
.sort_values(by = '', ascending = ,na_position = 'last'/'first')
.sort_values(['',''], ascending = ['', ''])

.sort_index()
.rank() assigns a numeric ranking to sech series value
#nba['Salary Rank'] = nba['Salary'].rank(ascending = False).astype(int)

pd.to_datetime(pd.Series, format = ''/%m%d%Y/) 
also work for time, format = '%H:%M %p'

dt.time
read_csv(parse_dates = True)

multiple
.isin(collection object, series, list, tuple), return True for a row is value is found

Filter based on condition
pd.to_datetime(df[], format = '%H:$M %p).dt.time
dt.timme()

isnull and notnull methods
.isnull()
.notnull()
.between()
.duplicated(keep = 'first'/'last'/False)
