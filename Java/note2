程序是对数据以及数据的操作，为方便理解和操作，高级语言使用数据类型，不同数据类型有不同的特征和操作。

类-自定义数据类型
static 表示类方法 也叫静态方法 相对的是市里方法 必须通过实例或者对象调用 而类方法可以直接通过类名进行调用。不需要创建实例
public表示公开 可以在任何地方被外部调用

private表示私有 函数只能在同一个类内被别的函数调用，不能被外部的类调 可以用private封装和隐藏内部实现细节，避免被误操作，是计算机程序的一种基本思维方式。
math array可看作自定义数据类型，分别表示数学和数组类型。其中的public static函数可以看做类型能进行的操作。接下来更为详细地讨论自定义数据类型。

程序解决现实问题，现实中的概念映射为程序中的概念，是初学者编程过程中的跨越。

public double distance(Point p){
  return Math.sqrt(Math.pow(x-p.getX(),2)+Math.pow(y-p.getY(),2));
}

public class Line{
  private Point start;
  private Point end;
  public Line(Point start, Point end){
  this.start = start;
  this.end = end;
}
  public double length(){
  return start.distance(end);
}
}

Line由两个point组成，创建line时，两个point是必需的，只有一个构造方法，且须传递两个点

Ex. 用类描述电商概念
1）产品：产品唯一id、名称、描述、图片、价格
2）用户：用户名，密码
3）订单：订单号、下单用户、选购产品

public class Product {
  private String id;
  private String name;
  private String pictureUrl;
  private String description;
  private double price;
}

public class OrderItem{
  private Product product;
  private int quantity;
  public OrderItem(Product product, int quantity){
  this.product = product;
  this.quantity = quantity;
  }
  public double computePrice(){
  return product.getPrice()*quantity;
  }
  }

public class Order{
  private String id;
  private User user;
  private OrderItem[] items;
  private Date createtime;
  private String receiver;
  private String address;
  private String phone;
  private String status;
  public double computeTotalPrice(){
  double totalPrice = 0;
  if (items!=null){
    for(OrderItem item: items){
  totalPrice+=item.computePrice();
  }}
  return totalPrice;
  }} 现实生活哪些概念，概念有哪些属性，什么关系，定义类，定义属性，定义方法、定义类

ex. 人的血缘
public class Person{
  private String name;
  private Person father;
  private Person mother;
  private Person[] children;
  public Person(String name){
  this.name = name;
}
}

从JAVA源代码到运行的程序，有编译和链接两个步骤。
